Requisitos do Aplicativo de Avaliações
1. Requisitos Funcionais
1.1 Autenticação e Seleção de Usuário
O usuário deve poder fazer login com credenciais (e-mail e senha).
Será nescessario salvar o token (Bearer) de autenticação no storage do dispositivo.
Após o login, se o usuário tiver mais de um tipo de perfil, deve ser exibida uma tela para seleção do perfil desejado antes de acessar o aplicativo.
1.2 Listagem de Avaliações
O usuário deve visualizar uma lista de avaliações associadas ao seu perfil selecionado.
Cada item da lista deve exibir informações básicas da avaliação (ex: nome, data, status).
O usuário deve poder selecionar uma avaliação para visualizar os detalhes.
1.3 Tela de Resultados da Avaliação
Ao selecionar uma avaliação, o usuário deve ser redirecionado para a tela de resultados.
Os resultados da avaliação devem ser apresentados em dois tipos de gráficos:
Gráfico de radar para exibir múltiplas dimensões dos resultados.
Gráfico de barras para exibir os valores individuais das categorias avaliadas.
2. Requisitos Não Funcionais
2.1 Plataforma e Tecnologia
O aplicativo deve ser desenvolvido em React Native utilizando Expo.
A API utilizada para consumir os dados deve ser própria do usuário.
A comunicação entre o aplicativo e a API deve ser feita via HTTP (RESTful API), utilizando Axios ou Fetch.
2.2 Experiência do Usuário (UX/UI)
O design deve ser responsivo e otimizado para dispositivos móveis.
As telas devem ser intuitivas e fáceis de navegar.
O tempo de resposta das requisições deve ser minimizado para proporcionar uma boa experiência.
2.3 Segurança
As credenciais do usuário não devem ser armazenadas em texto puro.
O token de autenticação deve ser gerenciado de forma segura, preferencialmente com AsyncStorage ou SecureStore.
3. Bibliotecas e Ferramentas Sugeridas
Gerenciamento de estado: Zustand, Redux ou Context API
Requisições HTTP: Axios
Gráficos: react-native-svg + victory-native ou recharts
Navegação: React Navigation
Autenticação:  API própria

Endpoints da API
A API contém os seguintes endpoints:

Login (POST /auth) → Retorna um token JWT.
Obter Usuário (GET /user) → Retorna informações do usuário autenticado.
Listar Avaliações (GET /assessments) → Retorna todas as avaliações.
Resultados de uma Avaliação (GET /assessments/{id}/result) → Retorna os resultados de uma avaliação específica.
resposta:
{
	"id": 5,
	"course": "Tecnologia Em Análise E Desenvolvimento De Sistemas",
	"faculty": "Faculdade de Tecnologia SENAI de Desenvolvimento Gerencial",
	"evaluator": "Rayner Max Fernandes Lima",
	"chart": {
		"labels": [
			"Tecnológica",
			"Conectividade",
			"Visibilidade",
			"Transparência",
			"Capacidade Preditiva",
			"Adaptação",
			"Didático-Pedagógica",
			"Capital Intelectual"
		],
		"scores": [
			85.71,
			50,
			40,
			80,
			40,
			20,
			60,
			40
		],
		"total": 79
	}
}

Respostas de uma Avaliação (GET /assessments/{id}/answers) → Retorna as respostas de uma avaliação.
Resultados Consolidados (GET /assessments/course/{course_id}/period/{period_id}/result) → Retorna os resultados consolidados.
resposta:
{
	"course": "Tecnologia Em Análise E Desenvolvimento De Sistemas",
	"faculty": "Faculdade de Tecnologia SENAI de Desenvolvimento Gerencial",
	"period": "2",
	"assessments": [
		{
			"assessment_id": 5,
			"evaluator": {
				"id": 20,
				"name": "Rayner Max Fernandes Lima",
				"image_url": "\/assets\/images\/profile-default.png"
			}
		},
		{
			"assessment_id": 4,
			"evaluator": {
				"id": 21,
				"name": "Flávia Simonassi",
				"image_url": "\/assets\/images\/profile-default.png"
			}
		},
		{
			"assessment_id": 7,
			"evaluator": {
				"id": 26,
				"name": "Vânia Alves",
				"image_url": "\/assets\/images\/profile-default.png"
			}
		}
	],
	"chart": {
		"labels": [
			"Tecnológica",
			"Conectividade",
			"Visibilidade",
			"Transparência",
			"Capacidade Preditiva",
			"Adaptação",
			"Didático-Pedagógica",
			"Capital Intelectual"
		],
		"scores": [
			60,
			46.67,
			33.33,
			73.33,
			40,
			33.33,
			60,
			53.33
		],
		"total": 70.33333333333333
	}
}
Trocar Função do Usuário (POST /switch-role/{role}) → Troca o papel do usuário no sistema.

export interface LoginRequest {
  email: string;
  password: string;
  device_name: string;
}

export interface LoginResponse {
  accessToken: string;
}

export interface AnswerResponse {
  question: string;
  answer: string;
}

export interface AssessmentResponse {
  id: number;
  id_evaluator: number;
  id_course: number;
  id_period: number;
  status: string;
  evaluator: Evaluator;
  course: Course;
}

export interface Evaluator {
  id: number;
  name: string;
  image_url: string;
}

export interface Period {
  id: number;
  date_start: string;
  date_end: string;
  semester: string;
  open: boolean;
}

export interface Course {
  id: number;
  name: string;
  id_faculty: number;
  faculty: Faculty;
}

export interface Faculty {
  id: number;
  name: string;
}

export interface AssessmentsResponse {
  grouped: AssessmentGroupedResponse[];
  ungrouped: AssessmentResponse[];
}

export interface AssessmentGroupedResponse {
  course_name: string;
  period: Period;
  assessments: AssessmentResponse[];
}

export interface DimensionResult {
  name: string;
  description: string;
  score: number;
  totalPoint: number;
}

export interface ConsolidatedResultsResponse {
  legend: string;
  data: DimensionResult[];
  total: number;
}
